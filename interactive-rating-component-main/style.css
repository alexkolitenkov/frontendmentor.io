:root {
    --font-family: 'Overpass', sans-serif;
    --border-radius: 1rem;
    --font-size: 15px;
    --font-weight-400: 400;
    --font-weight-700: 700;

    --primary-orange: hsl(25, 97%, 53%);

    --neutral-100: hsl(0, 0%, 100%);
    --neutral-200: hsl(217, 12%, 63%);
    --neutral-300: hsl(216, 12%, 54%);
    --neutral-400: hsl(213, 19%, 18%);
    --neutral-500: hsl(216, 12%, 8%);

    --h2-before-background-image: url("images/icon-star.svg");
    --h2-before-background-color: hsl(216, 12%, 54%, 0.2);
    --h2-before-width: 3rem;
    --h2-before-height: 3rem;
    --h2-before-border-radius: 100vmax;
    --h2-before-margin: 0 0 1rem;
    --h2-before-background-size: auto;
}

/* Box sizing rules */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Remove default margin */
* {
    margin: 0;
    padding: 0;
    font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
    list-style: none;
}

/* Set core root defaults */
html:focus-within {
    scroll-behavior: smooth;
}

html,
body {
    height: 100%;
}

/* Set core body defaults */
body {
    text-rendering: optimizeSpeed;
    line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
    text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
    max-width: 100%;
    display: flex;
    flex-direction: column;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
    html:focus-within {
        scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* general styling */

body {
    text-align: left;
    font-family: var(--font-family);
    font-size: var(--font-size);
    color: var(--neutral-100);
    background-color: var(--neutral-500);
}

.wrapper {
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem;
}

.wrapper>article {
    max-width: 25rem;
    background-color: var(--neutral-400);
    padding: 1.75rem;
    border-radius: 1rem;
}

h2 {
    font-size: 2rem;
    line-height: 2;
}

h2::before {
    content: '';
    background-image: var(--h2-before-background-image);
    background-color: var(--h2-before-background-color);
    background-position: center;
    background-repeat: no-repeat;
    background-size: var(--h2-before-background-size);
    display: block;
    width: var(--h2-before-width);
    height: var(--h2-before-height);
    border-radius: var(--h2-before-border-radius);
    margin: var(--h2-before-margin);
}

p {
    color: var(--neutral-200);
}

.button {
    display: inline-flex;
    width: 100%;
    justify-content: center;
    cursor: pointer;
    text-decoration: none;
    border: 0;
    letter-spacing: 0.125rem;
    text-transform: uppercase;
    border-radius: 100vmax;
    padding: 1.25em 2.5em;
    line-height: 1;
    color: var(--neutral-100);
    background-color: var(--primary-orange);
}

.button:where(:hover, :active) {
    color: var(--primary-orange);
    background-color: var(--neutral-100);
}

.rating {
    margin-block: 1.5rem;
    display: flex;
    justify-content: space-around;
}

.scores {
    color: var(--neutral-200);
    border: 0;
    border-radius: 50%;
    width: 2.225rem;
    height: 2.225rem;
    padding: 0.675rem;
    background-color: hsl(216, 12%, 54%, 0.2);
    text-align: center;
}

@media only screen and (min-width: 375px) {
    .scores {
        width: 3rem;
        height: 3rem;
        padding: 1rem;
    }
}

.scores:hover {
    cursor: pointer;
    background-color: var(--primary-orange);
    color: var(--neutral-100);
}

.scores:where(:focus, ::after) {
    background-color: var(--neutral-200);
    color: var(--neutral-100);
}

/* JS dynamic */
.selected-score {
    position: absolute;
    top: 60%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--primary-orange);
    font-size: var(--font-size);
    min-width: 200px;
    padding: 0.5rem 1rem;
    border-radius: 100vmax;
    background-color: hsl(216, 12%, 54%, 0.2);
}

.relative{
    position: relative;
}